global:
  disableRequestsLimits: false
  deploymentMode: development
  registry:
    formManagementProvider:
      istio:
        sidecar:
          enabled: true
          resources:
            limits: {}
            requests: {}
      container:
        resources: {}
        envVars: {}

formManagementModeler:
  name: form-management-modeler
  port: 3001
  service:
    type: ClusterIP
    port: 3001
  replicas: 1
  credentials:
    username: admin@edp-epam.com
    password: password123
  readinessHealthCheckPath: /actuator/health/readiness
  livenessHealthCheckPath: /actuator/health/liveness

formManagementProvider:
  podAnnotations: {}
  name: form-management-provider
  port: 3001
  service:
    type: ClusterIP
    port: 3001
  replicas: 1
  credentials:
    username: admin@edp-epam.com
    password: password123
  readinessHealthCheckPath: /actuator/health/readiness
  livenessHealthCheckPath: /actuator/health/liveness
  logLevel: INFO
  logHttpBody: 'false'

formManagementModelerDb:
  image: mongo:4.1
  port: 27017
  service:
    type: ClusterIP
    clusterIP: None
    port: 27017
  replicas: 1
  defaultDatabase: formio
  credentials:
    username: root
    # password: '' # randomly generated
  storage:
    size: 2Gi

formManagementProviderDb:
  image: mongo:4.1
  port: 27017
  service:
    type: ClusterIP
    clusterIP: None
    port: 27017
  replicas: 1
  defaultDatabase: formio
  credentials:
    username: root
    # password: '' # randomly generated
  storage:
    size: 2Gi

formManagementDb:
  storage:
    class: gp2-c

# Values for local test templating
cdPipelineName: pipeline
cdPipelineStageName: stage
dnsWildcard: localhost
image:
  name: form-modeler-portal
  version: latest

keycloak:
  realms:
    officer: officer-portal
    citizen: citizen-portal
    admin: admin
  certificatesEndpoint: /protocol/openid-connect/certs

metrics:
  image: 'bitnami/mongodb-exporter:0.11.2-debian-10-r281'
  containerPort: 9216
  service:
    port: 9216

  prometheus:
    db:
      endpoints:
        - scrapePath: "/metrics"
          port: "{{ .Values.metrics.service.port }}"
    app:
      endpoints:
        - scrapePath: "/actuator/prometheus"
          port: "3001"

monitoring:
  namespace: openshift-monitoring
